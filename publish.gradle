// shell: ./gradlew :module:install :module:bintrayUpload

apply plugin: 'com.github.dcendents.android-maven'
// publish to JFrog
apply plugin: 'com.jfrog.artifactory'
// publish to JCenter
apply plugin: 'com.jfrog.bintray'

group = GROUP_ID
version = VERSION_NAME

if (project.getPlugins().hasPlugin('com.android.library')) {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs

        exclude '**/BuildConfig.java'
        exclude '**/R.java'

        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

        failOnError false
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
} else {
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging project.getPlugins().hasPlugin('com.android.library') ? "aar" : 'jar'

            groupId GROUP_ID
            artifactId project.name
            version = VERSION_NAME

            name project.name
            description project.name
            url SITE_URL

            licenses {
                license {
                    name LICENSE_APACHE_NAME
                    url LICENSE_APACHE_URL
                }
            }

            developers {
                developer {
                    id DEVELOPER_ID
                    name DEVELOPER_NAME
                    email DEVELOPER_EMAIL
                }
            }

            issueManagement {
                system ISSUE_SYSTEM
                url ISSUE_TRACKER_URL
            }

            scm {
                url SITE_URL
                connection GIT_URL
                developerConnection GIT_URL
            }
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org/artifactory'

    resolve {
        repository {
            repoKey = 'libs-release'
        }
    }

    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = BINTRAY_USER
            password = BINTRAY_API_KEY
            maven = true
        }

        defaults {
            publishConfigs('archives')
            publishArtifacts = true
        }
    }
}

bintray {
    user = BINTRAY_USER
    key = BINTRAY_API_KEY

    configurations = ['archives'] //When uploading configuration files

    pkg {
        repo = 'maven'
        name = project.name
        desc = project.name
        websiteUrl = SITE_URL
        vcsUrl = GIT_URL
        issueTrackerUrl = ISSUE_TRACKER_URL
        licenses = LICENSES_ALL
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
    }
}

